The doctor data was saved in a JSON file and the file was parsed. After parsing the doctor data was saved in an ArrayList, as we don't need to edit it (insert/delete) often. It just needs to be accessed. The ArrayList was traversed and the entered doctor was compared with the list. If there is any similarity in between the doctors in the list and the entered doctors, the doctor from the list was added to the return list. The list to be returned is then sorted using Comparater interface. The doctors with common specialty are included at the top and the others at bottom. I have sorted the list to be returned on the review score.
Currently I have included a check on all the fields of the Doctor class. But we can narrow it down later if we want to.